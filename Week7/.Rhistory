head(iris)                          # Head of example data
iris1 <- iris                       # Replicate example data
library(qtl)
library(qtl)
library(qtlcharts)
knitr::opts_chunk$set(fig.width=8, fig.height=6, message=FALSE)
library(qtl)
library(qtlcharts)
knitr::opts_chunk$set(fig.width=8, fig.height=6, message=FALSE)
?read.cross
sug <- read.cross("csv", "https://rqtl.org", "sug.csv",
genotypes=c("CC", "CB", "BB"), alleles=c("C", "B"))
summary(sug)
head(sug$pheno)
nind(sug)    # No. individuals
nphe(sug)    # No. phenotypes
nchr(sug)    # No. chromosomes
totmar(sug)  # Total markers
nmar(sug)    # No. markers on each chromosome
plot(sug)
nind(sug)    # No. individuals
nphe(sug)    # No. phenotypes
nchr(sug)    # No. chromosomes
totmar(sug)  # Total markers
nmar(sug)    # No. markers on each chromosome
#?plotMissing
plotMissing(sug, main="")
plotMissing(sug, main="", reorder=1)
#?plotMap
plotMap(sug)
plotMap(sug,show.marker.names=TRUE)
#?plotPheno
plotPheno(sug, pheno.col=1)
plotPheno(sug, pheno.col=2)
plotPheno(sug, pheno.col=3)
plotPheno(sug, pheno.col=4)
iplotMap(sug) #D7MIT31
iplotCorr(sug$pheno)
iplotCorr(sug$pheno, chartOpts=list(height=300, width=600, scatcolors="pink"))
knitr::opts_chunk$set(echo = TRUE)
library(here)
library(tidyverse)
library(naniar)
library(janitor)
library(shiny)
library(paletteer)
library(ggmap)
library(rgeos)
library(rgdal)
library(devtools)
turtles<-read.csv(here("Final Project","Official Final Project Documents/Turtle_data.csv"))
turtles_tidy<-turtles%>%
na_if("")%>%
na_if("0")%>%
na_if("0.0")%>%
mutate(dead_alive_new=if_else(Dead_Alive=="alive","Alive",Dead_Alive))
library(lubridate)
view(turtles3)
turtles3<-turtles_tidy%>%
mutate(DateCapture_new=dmy(DateCapture))%>%
filter(!is.na(DateCapture_new))%>%
mutate(Capture_month=month(DateCapture_new))%>%
mutate(Capture_day=day(DateCapture_new))%>%
mutate(capture_week_day=wday(DateCapture_new))
turtles3<-clean_names(turtles3)
head(turtles3)
view(turtles3)
turtles3<-turtles_tidy%>%
mutate(DateCapture_new=dmy(DateCapture))%>%
filter(!is.na(DateCapture_new))%>%
mutate(Capture_month=month(DateCapture_new))%>%
mutate(Capture_day=day(DateCapture_new))%>%
mutate(capture_week_day=wday(DateCapture_new))
turtles3<-clean_names(turtles3)
head(turtles3)
view(turtles3)
get(wd)
getwd()
radio <- read_csv("Renamed_Data_Table.csv")
glimpse(raido)
glimpse(radio)
turtles3<-turtles_tidy%>%
mutate(DateCapture_new=dmy(DateCapture))%>%
filter(!is.na(DateCapture_new))%>%
mutate(Capture_month=month(DateCapture_new))%>%
mutate(Capture_day=day(DateCapture_new))%>%
mutate(capture_week_day=wday(DateCapture_new))
turtles3<-clean_names(turtles3)
head(turtles3)
view(turtles3)
view(radio)
knitr::opts_chunk$set(echo = TRUE)
hbirds <- data.frame(fed, kelp model, no urchins)
hbirds <- data.frame(fed, "kelp model", "no urchins")
results <- data.frame("fed", "kelp model", "no urchins")
results
results <- data.frame("fed", "kelp model", "no urchins")
results
fed <- c(5, 5, 5)
kelp model <- c(12, 12, 12)
knitr::opts_chunk$set(echo = TRUE)
results <- data.frame("fed", "kelp_model", "no_urchins", "unfed")
results
results <- data.frame(fed, kelp_model, no_urchins, unfed)
fed <- c(5, 5, 5)
kelp_model <- c(12, 12, 12)
unfed <- c(4, 4, 4)
no_urchins <- c(20, 20,20)
results <- data.frame(fed, kelp_model, no_urchins, unfed)
results
ggplot(aes(x = results))+
geom_bar
library(tidyverse)
library(tidyverse)
library(ggplot)
library(tidyverse)
library(ggplot2)
ggplot(aes(x = results))+
geom_bar
library(tidyverse)
library(RColorBrewer)
library(paletteer)
fed <- c(5, 5, 5)
kelp_model <- c(12, 12, 12)
unfed <- c(4, 4, 4)
no_urchins <- c(20, 20,20)
treatment <- c(red, kelp_model, unfed, no_urchins)
treatment <- c(fed, kelp_model, unfed, no_urchins)
results <- data.frame(treatment)
results
Treatment <- c("Fed", "Unfed", "Kelp Model", "No Urchins")
Value <- c(5, 4, 12, 20)
results <- data.frame(Treatments, Value)
results <- data.frame(Treatment, Value)
results <- data.frame(Treatment, Value)
results
results <- data.frame(Treatment, Value)
results
results %>%
ggplot(aes(x = Treatment, fill = Treatment))+
geom_bar()
results %>%
ggplot(aes(x = Value, fill = Treatment))+
geom_bar()
results %>%
ggplot(aes(x = Treatment, y = Value fill = Treatment))+
results %>%
ggplot(aes(x = Treatment, y = Value, fill = Treatment))+
geom_col()
results %>%
ggplot(aes(x = Treatment, y = Value, fill = Treatment))+
geom_col()+
theme_light(base_size = 12)+
theme(axis.text.x = element_text(angle = 60, hjust = 1))+
labs(y = "kelp/m^2", title = "Average Kelp Recruits/m^2"
results %>%
ggplot(aes(x = Treatment, y = Value, fill = Treatment))+
geom_col()+
theme_light(base_size = 12)+
theme(axis.text.x = element_text(angle = 60, hjust = 1))+
labs(y = "kelp/m^2", title = "Average Kelp Recruits/m^2")
results %>%
ggplot(aes(x = Treatment, y = Value, fill = Treatment))+
geom_col()+
theme_light(base_size = 12)+
theme()+
labs(y = "kelp/m^2", title = "Average Kelp Recruits/m^2")
Value_2 <- c(12, 4, 5, 20)
results <- data.frame(Treatment, Value)
results
results <- data.frame(Treatment, Value, Value_2)
results %>%
ggplot(aes(x = Treatment, y = Value, fill = Treatment))+
geom_col()+
theme_light(base_size = 12)+
theme()+
labs(y = "kelp/m^2", title = "Average Kelp Recruits/m^2")
results <- data.frame(Treatment, Value, Value_2)
results
results %>%
ggplot(aes(x = Treatment, y = Value_2, fill = Treatment))+
geom_col()+
theme_light(base_size = 12)+
theme()+
labs(y = "kelp/m^2", title = "Average Kelp Recruits/m^2")
results %>%
ggplot(aes(x = Treatment, y = Value, fill = Treatment))+
geom_col()+
theme_light(base_size = 12)+
theme()+
scale_fill_brewer(palette = "BrBG")+
labs(y = "kelp/m^2", title = "Average Kelp Recruits/m^2")
results %>%
ggplot(aes(x = Treatment, y = Value_2, fill = Treatment))+
geom_col()+
theme_light(base_size = 12)+
theme()+
scale_fill_brewer(palette = "BrBG")+
labs(y = "kelp/m^2", title = "Average Kelp Recruits/m^2")
Treatment <- c("Fed", "Unfed", "Kelp Model", "No Urchins")
Value <- c(5, 4, 12, 20, 12, 4, 5, 20)
Hypothesis <- c(1,1,1,1,2,2,2,2,)
Hypothesis <- c(1,1,1,1,2,2,2,2)
results <- data.frame(Treatment, Value, Value_2)
results
Treatment <- c("Fed", "Unfed", "Kelp Model", "No Urchins")
Value <- c(5, 4, 12, 20, 12, 4, 5, 20)
Hypothesis <- c(1,1,1,1,2,2,2,2)
results <- data.frame(Treatment, Value, Hypothesis)
results <- data.frame(Treatment, Value, Hypothesis)
results
results %>%
ggplot(aes(x = Treatment, y = Value, fill = Treatment))+
geom_col()+
theme_light(base_size = 12)+
theme()+
scale_fill_brewer(palette = "BrBG")+
labs(y = "kelp/m^2", title = "Average Kelp Recruits/m^2")
results %>%
ggplot(aes(x = Treatment, y = Value, fill = Hypothesis))+
geom_col()+
theme_light(base_size = 12)+
theme()+
scale_fill_brewer(palette = "BrBG")+
labs(y = "kelp/m^2", title = "Average Kelp Recruits/m^2")
results %>%
group_by(Hypothesis) %>%
ggplot(aes(x = Treatment, y = Value, fill = Hypothesis))+
geom_col()+
theme_light(base_size = 12)+
theme()+
scale_fill_brewer(palette = "BrBG")+
labs(y = "kelp/m^2", title = "Average Kelp Recruits/m^2")
results %>%
group_by(Hypothesis) %>%
ggplot(aes(x = Treatment, y = Value, fill = Hypothesis, group = 1))+
geom_col()+
theme_light(base_size = 12)+
theme()+
scale_fill_brewer(palette = "BrBG")+
labs(y = "kelp/m^2", title = "Average Kelp Recruits/m^2")
Treatment <- c("Fed", "Unfed", "Kelp Model", "No Urchins")
Value <- c(5, 4, 12, 20, 12, 4, 5, 20)
Hypothesis <- c(a,a,a,a,b,b,b,b)
Hypothesis <- c("a","a","a","a","b","b","b","b",)
Hypothesis <- c("a","a","a","a","b","b","b","b")
results <- data.frame(Treatment, Value, Hypothesis)
results
results %>%
group_by(Hypothesis) %>%
ggplot(aes(x = Treatment, y = Value, fill = Hypothesis))+
geom_col()+
theme_light(base_size = 12)+
theme()+
scale_fill_brewer(palette = "BrBG")+
labs(y = "kelp/m^2", title = "Average Kelp Recruits/m^2")
results %>%
group_by(Hypothesis) %>%
ggplot(aes(x = Treatment, y = Value, fill = Hypothesis))+
geom_col()+
theme_light(base_size = 12)+
theme()+
scale_fill_brewer(palette = "BrBG", position = "dodge")+
labs(y = "kelp/m^2", title = "Average Kelp Recruits/m^2")
results %>%
group_by(Hypothesis) %>%
ggplot(aes(x = Treatment, y = Value, fill = Hypothesis))+
geom_col()+
theme_light(base_size = 12)+
theme()+
scale_fill_brewer(palette = "BrBG")+
labs(y = "kelp/m^2", title = "Average Kelp Recruits/m^2")
results %>%
group_by(Hypothesis) %>%
ggplot(aes(x = Treatment, y = Value, fill = Hypothesis))+
geom_col(position = dodge)+
theme_light(base_size = 12)+
theme()+
scale_fill_brewer(palette = "BrBG")+
labs(y = "kelp/m^2", title = "Average Kelp Recruits/m^2")
results %>%
group_by(Hypothesis) %>%
ggplot(aes(x = Treatment, y = Value, fill = Hypothesis))+
geom_col(position = "dodge")+
theme_light(base_size = 12)+
theme()+
scale_fill_brewer(palette = "BrBG")+
labs(y = "kelp/m^2", title = "Average Kelp Recruits/m^2")
results %>%
group_by(Hypothesis) %>%
ggplot(aes(x = Treatment, y = Value, fill = Hypothesis))+
geom_col(position = "dodge")+
theme_light(base_size = 12)+
theme()+
scale_fill_brewer()+
labs(y = "kelp/m^2", title = "Average Kelp Recruits/m^2")
results %>%
group_by(Hypothesis) %>%
ggplot(aes(x = Treatment, y = Value, fill = Hypothesis))+
geom_col(position = "dodge")+
theme_light(base_size = 12)+
theme()+
scale_fill_brewer(palette = "RdYlBu")+
labs(y = "kelp/m^2", title = "Average Kelp Recruits/m^2")
results %>%
group_by(Hypothesis) %>%
ggplot(aes(x = Treatment, y = Value, fill = Hypothesis))+
geom_col(position = "dodge")+
theme_light(base_size = 12)+
theme()+
scale_fill_brewer(palette = "Paired")+
labs(y = "kelp/m^2", title = "Average Kelp Recruits/m^2")
Treatment <- c("Fed", "Unfed", "Kelp Model", "No Urchins")
Value <- c(5, 4, 12, 20, 12, 4, 5, 20)
Hypothesis <- c("3D Structure","3D Structure","3D Structure","3D Structure","Starvation State","Starvation State","Starvation State","Starvation State")
results <- data.frame(Treatment, Value, Hypothesis)
results
results %>%
group_by(Hypothesis) %>%
ggplot(aes(x = Treatment, y = Value, fill = Hypothesis))+
geom_col(position = "dodge")+
theme_light(base_size = 12)+
theme()+
scale_fill_brewer(palette = "Paired")+
labs(y = "kelp/m^2", title = "Average Kelp Recruits/m^2")
results %>%
group_by(Hypothesis) %>%
ggplot(aes(x = Treatment, y = Value, fill = Hypothesis))+
geom_col(position = "dodge")+
theme_light(base_size = 12)+
theme()+
scale_fill_brewer(palette = "Paired")+
labs(y = "kelp/m^2", title = "Average Kelp Recruitment")
Value <- c(.9, .8, .4,.4,.9,.9)
Treatment <- c("Fed", "Unfed", "Kelp Model")
Value <- c(.9, .8, .4,.4,.9,.9)
Hypothesis <- c("3D Structure","3D Structure","3D Structure","3D Structure","Starvation State","Starvation State","Starvation State","Starvation State")
results <- data.frame(Treatment, Value, Hypothesis)
results <- data.frame(Treatment, Value, Hypothesis)
Treatment <- c("Fed", "Unfed", "Kelp Model")
Value <- c(.9, .8, .4,.4,.9,.9)
Hypothesis <- c("3D Structure","3D Structure","3D Structure","3D Structure","Starvation State","Starvation State","Starvation State","Starvation State")
Hypothesis <- c("3D Structure","3D Structure","3D Structure","Starvation State","Starvation State","Starvation State")
results <- data.frame(Treatment, Value, Hypothesis)
results
results %>%
ggplot(aes(x = Treatment, y = Value_2, fill = Treatment))+
geom_col()+
theme_light(base_size = 12)+
theme()+
scale_fill_brewer(palette = "BrBG")+
labs(y = "Percent of Urchin in Exposed Habitat", title = "Urchin Feeding Behavior")
results %>%
group_by(Hypothesis) %>%
ggplot(aes(x = Treatment, y = Value, fill = Hypothesis))+
geom_col(position = "dodge")+
theme_light(base_size = 12)+
theme()+
scale_fill_brewer(palette = "Paired")+
labs(y = "Percent of Urchin in Exposed Habitat", title = "Urchin Feeding Behavior")
Treatment <- c("Fed", "Unfed", "Kelp Model")
Value <- c(.9, .8, .4,.3,.9,.9)
Hypothesis <- c("3D Structure","3D Structure","3D Structure","Starvation State","Starvation State","Starvation State")
results <- data.frame(Treatment, Value, Hypothesis)
results
results %>%
group_by(Hypothesis) %>%
ggplot(aes(x = Treatment, y = Value, fill = Hypothesis))+
geom_col(position = "dodge")+
theme_light(base_size = 12)+
theme()+
scale_fill_brewer(palette = "Paired")+
labs(y = "Percent of Urchin in Exposed Habitat", title = "Urchin Feeding Behavior")
install.packages(c("callr", "cpp11", "diffobj", "e1071", "gert", "maptools", "processx", "qtl", "rvest", "sf", "survival", "tinytex", "units", "utf8", "vctrs", "waldo", "xfun"))
install.packages(c("gert", "vctrs"))
knitr::opts_chunk$set(echo = TRUE)
x=c("red","red","blue","white","green","red")
x=c("red","red","blue","white","green","red")
x!="red"
knitr::opts_chunk$set(echo = TRUE)
```{r}
```{r}
x=c("red","red","blue","white","green","red")
x!="red"
x=c("red","red","blue","white","green","red")
which(x!="red")
install.packages(c("bitops", "brio", "broom", "callr", "cli", "cluster", "dbplyr", "devtools", "DT", "ellipsis", "gert", "gh", "haven", "highr", "httpuv", "jquerylib", "knitr", "later", "mgcv", "nycflights13", "pillar", "pkgload", "processx", "remotes", "reprex", "survival", "tibble", "tidyverse", "vctrs", "viridis", "viridisLite", "withr"))
install.packages(c("bslib", "sass", "stringi", "systemfonts"))
setwd("~/Desktop/EVE1982021")
library(OutFLANK)
library(vcfR)
library(vcfR)
##read in data
data <- read.vcfR(vcf.path)
knitr::opts_chunk$set(echo = TRUE)
Selection analysis
library(OutFLANK)
#Selection analysis
library(OutFLANK)
library(vcfR)
##read in data
data <- read.vcfR(vcf.path)
setwd("~/Desktop/EVE1982021/Week7")
#Selection analysis
library(OutFLANK)
library(vcfR)
##read in data
data <- read.vcfR(vcf.path)
##Paths for data
vcf.path=data("filtered_3699snps_californicus.vcf")
meta.path=data("californicus_metadata.csv")
knitr::opts_chunk$set(echo = TRUE)
library(devtools)
##finding PCS outliers
##Isaiah Bluestein
##05/11/21
library(pcadapt)
library(qvalue)
library(ggplot2)
##Paths for data
vcf.path=data("filtered_3699snps_californicus.vcf")
meta.path=data("californicus_metadata.csv")
setwd("~/Desktop/EVE1982021/Week7")
##Paths for data
vcf.path=data("filtered_3699snps_californicus.vcf")
meta.path=data("californicus_metadata.csv")
getwd()
vcf.path=data("filtered_3699snps_californicus.vcf")
meta.path=data("californicus_metadata.csv")
setwd("~/Desktop/EVE1982021/Week7")
##Paths for data
vcf.path=data("filtered_3699snps_californicus.vcf")
meta.path=data("californicus_metadata.csv")
knitr::opts_chunk$set(echo = TRUE)
#install.packages("devtools")
#install.packages(c("BiocManager","vcfR","pcadapt"))
#BiocManager::install("qvalue")
library(devtools)
#install_github("whitlock/OutFLANK")
##finding PCS outliers
##Isaiah Bluestein
##05/11/21
library(pcadapt)
library(qvalue)
library(ggplot2)
##Paths for data
vcf.path=data("filtered_3699snps_californicus.vcf")
meta.path=data("californicus_metadata.csv")
##read in genotype
genos <- read.pcadapt(vcf.path,type=c("vcf"))
##read in metadata
meta <- read.csv(meta.path)
head(meta)
##plot PCA
x <- pcadapt(input=genos,K=5)
plot(x,option="screeplot")
plot(x,option="scores",pop=meta$Group)
##find the snips
plot(x,option="manhattan")
qval <- qvalue(x$pvalues)$qvalues
outliers <- which(qval<0.1)
length(outliers)
plot(x$scores[,1]~meta$LAT,pch=19,col="gray")
plot(x$scores[,1]~meta$LAT, pch=19, col="blue")
#Selection analysis
library(OutFLANK)
library(vcfR)
##read in data
data <- read.vcfR(vcf.path)
#Selection analysis
library(OutFLANK)
library(vcfR)
##read in data
data <- read.vcfR(vcf.path)
geno <- extract.gt(data)
dim(geno)
head(geno[,1:10])
dim(tG)
G <- geno
G[geno %in% c("0/0")] <- 0
G[geno  %in% c("0/1")] <- 1
G[geno %in% c("1/1")] <- 2
G[is.na(G)] <- 9
tG <- t(G)
dim(tG)
head(G)
subpops <- c("TBL","AK4")
subgen <- tG[meta$SITE%in%subpops,]
submeta <- subset(meta,SITE%in%subpops)
subpops <- c("TBL","AK4")
subgen <- tG[meta$SITE%in%subpops,]
submeta <- subset(meta,SITE%in%subpops)
subpops <- c("TBL","AK4")
subgen <- tG[meta$SITE%in%subpops,]
submeta <- subset(meta,SITE%in%subpops)
identical(rownames(subgen, submeta$ID))
identical(rownames(subgen), submeta$ID)
fst <- MakeDiploidFSTMat(subgen,locusNames=1:ncol(subgen),popNames=submeta$SITE)
hist(fst$FST)
hist(fst$FST,breaks=50)
OF <- OutFLANK(fst,LeftTrimFraction=0.01,RightTrimFraction=0.01,
Hmin=0.05,NumberOfSamples=2,qthreshold=0.01)
OutFLANKResultsPlotter(OF,withOutliers=T,
NoCorr=T,Hmin=0.1,binwidth=0.005,
Zoom=F,RightZoomFraction=0.05,titletext=NULL)
table(outliers)
P1 <- pOutlierFinderChiSqNoCorr(fst,Fstbar=OF$FSTNoCorrbar,
dfInferred=OF$dfInferred,qthreshold=0.05,Hmin=0.1)
outliers <- P1$OutlierFlag==TRUE
table(outliers)
plot(P1$LocusName,P1$FST,xlab="Position",ylab="FST",col=rgb(0,0,0,alpha=0.1))
points(P1$LocusName[outliers],P1$FST[outliers],col="magenta")
